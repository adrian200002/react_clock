{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["getToday","Date","toUTCString","slice","Clock","state","date","intervalID","this","window","setInterval","setState","console","info","prevProps","name","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","clockName","document","addEventListener","event","preventDefault","ReactDOM","render","getElementById"],"mappings":"sNAEMA,EAAW,kBAAM,IAAIC,MAAOC,cAAcC,OAAO,IAAK,IAM/CC,EAAb,4MACEC,MAAQ,CACNC,KAAMN,KAFV,EAKEO,WAAa,EALf,uDAOE,WAA2B,IAAD,OACxBC,KAAKD,WAAaE,OAAOC,aAAY,WACnC,EAAKC,SAAS,CAAEL,KAAMN,MAEtBY,QAAQC,KAAKb,OACZ,OAZP,gCAeE,SAAmBc,GACbA,EAAUC,OAASP,KAAKQ,MAAMD,MAEhCH,QAAQK,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDP,KAAKQ,MAAMD,SAlBpE,kCAsBE,WACEN,OAAOS,cAAcV,KAAKD,cAvB9B,oBA0BE,WACE,OACE,sBAAKY,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGX,KAAKQ,MAAMD,OAGb,YAED,sBAAMI,UAAU,cAAhB,SACGX,KAAKH,MAAMC,cApCtB,GAA2Bc,IAAMC,WCJjC,SAASC,IACP,IAAMC,EAAQtB,KAAKuB,MAAMC,WAAWtB,OAAO,GAE3C,MAAM,SAAN,OAAgBoB,GAQX,IAAMG,EAAb,4MACErB,MAAQ,CACNsB,UAAU,EACVC,UAAW,WAHf,uDAME,WAA2B,IAAD,OACxBnB,OAAOC,aAAY,WACjB,EAAKC,SAAS,CAAEiB,UAAWN,QAC1B,QATP,oBAYE,WAAU,IAAD,OAaP,OAHAO,SAASC,iBAAiB,eATN,SAACC,GACnBA,EAAMC,iBACN,EAAKrB,SAAS,CAAEgB,UAAU,OAQ5BE,SAASC,iBAAiB,SALP,WACjB,EAAKnB,SAAS,CAAEgB,UAAU,OAO1B,sBAAKR,UAAU,MAAf,UACE,6CACCX,KAAKH,MAAMsB,UAAY,cAAC,EAAD,CAAOZ,KAAMP,KAAKH,MAAMuB,mBA5BxD,GAAyBR,IAAMC,WCZ/BY,IAASC,OACP,cAAC,EAAD,IACAL,SAASM,eAAe,W","file":"static/js/main.840ccc9c.chunk.js","sourcesContent":["import React from 'react';\n\nconst getToday = () => new Date().toUTCString().slice(-12, -4);\n\ntype State = {\n  date: string;\n};\n\nexport class Clock extends React.Component<{ name: string }, State> {\n  state = {\n    date: getToday(),\n  };\n\n  intervalID = 0;\n\n  componentDidMount(): void {\n    this.intervalID = window.setInterval(() => {\n      this.setState({ date: getToday() });\n      // eslint-disable-next-line no-console\n      console.info(getToday());\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: Readonly<{ name: string; }>): void {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.debug(`Renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount(): void {\n    window.clearInterval(this.intervalID);\n  }\n\n  render() {\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {this.state.date}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  hasClock: boolean;\n  clockName: string;\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  componentDidMount(): void {\n    window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  render() {\n    const handleRight = (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    };\n\n    const handleLeft = () => {\n      this.setState({ hasClock: true });\n    };\n\n    document.addEventListener('contextmenu', handleRight);\n    document.addEventListener('click', handleLeft);\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock && <Clock name={this.state.clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}